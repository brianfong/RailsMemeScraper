---
apiVersion: v1
kind: Namespace
metadata:
  name: memes
---
apiVersion: v1
data:
  POSTGRES_USER: memes
kind: ConfigMap
metadata:
  name: env
  namespace: memes
---
apiVersion: v1
data:
  POSTGRES_DB: memes
kind: ConfigMap
metadata:
  name: env2
  namespace: memes
---
apiVersion: v1
data:
  POSTGRES_PASSWORD: cmVkZGl0bWVtZXM=
kind: Secret
metadata:
  name: db-pass
  namespace: memes
type: Opaque
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  labels:
    run: postgres
  name: postgres
  namespace: memes
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      run: postgres
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      labels:
        run: postgres
    spec:
      containers:
      - envFrom:
        - configMapRef: 
            name: env
        - configMapRef: 
            name: env2
        - secretRef: 
            name: db-pass
        image: postgres
        imagePullPolicy: Always
        name: postgres
        ports:
        - containerPort: 5432
          protocol: TCP
---
apiVersion: v1
kind: Service
metadata:
  labels:
    run: postgres
  name: postgres
  namespace: memes
spec:
  ports:
  - port: 5432
    protocol: TCP
    targetPort: 5432
  selector:
    run: postgres
  sessionAffinity: None
  type: ClusterIP
---
apiVersion: v1
data:
  RAILS_ENV: production
  HELLO_THERE: peter
kind: ConfigMap
metadata:
  name: app-env
  namespace: memes
---
apiVersion: v1
data:
  HELLO_THERE: brian
  FUCK_OFF: bob
kind: ConfigMap
metadata:
  name: app-app
  namespace: memes
---
apiVersion: v1
data:
  DATABASE_URL: cG9zdGdyZXM6Ly9tZW1lczpyZWRkaXRtZW1lc0Bwb3N0Z3Jlczo1NDMyL21lbWVz
kind: Secret
metadata:
  name: app-db-pass
  namespace: memes
type: Opaque
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  labels:
    run: app
  name: app
  namespace: memes
spec:
  progressDeadlineSeconds: 600
  replicas: 2
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      run: app
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      labels:
        run: app
    spec:
      containers:
      - envFrom: 
        - configMapRef: 
            name: app-env
        - secretRef: 
            name: app-db-pass
        image: reddit_scraper
        imagePullPolicy: Never
        livenessProbe:
          httpGet:
            path: /health_check
            port: 3000
          initialDelaySeconds: 3
          periodSeconds: 3
        readinessProbe:
          httpGet:
            path: /health_check
            port: 3000
          initialDelaySeconds: 3
          periodSeconds: 3
        name: app
        resources:
          limits:
            cpu: "1"
            memory: 5512Mi
          requests:
            cpu: "1"
            memory: 512Mi
        ports:
        - containerPort: 3000
          protocol: TCP
        volumeMounts:
        - mountPath: /hey/brian
          name: brian-app
          readOnly: true
          subPath: SOD_OFF
        - mountPath: /hey/peter2
          name: brian-app
          readOnly: true
          subPath: HELLO_THERE
        - mountPath: /myapp/config.yaml
          name: brian-app
          readOnly: true
          subPath: HELLO_THERE
      initContainers:
      - command:
        - rake
        - db:migrate
        envFrom:
        - configMapRef: 
            name: app-env
        - secretRef: 
            name: app-db-pass
        image: reddit_scraper
        imagePullPolicy: Never
        name: db-migrate
      volumes:
      - configMap: 
          name: app-app
        name: brian-app
---
apiVersion: v1
kind: Service
metadata:
  labels:
    run: app
  name: app
  namespace: memes
spec:
  externalTrafficPolicy: Cluster
  ports:
  - port: 8000
    protocol: TCP
    targetPort: 3000
  selector:
    run: app
  sessionAffinity: None
  type: NodePort
---
apiVersion: batch/v1beta1
kind: CronJob
metadata:
  name: fetch-memes
  namespace: memes
spec:
  concurrencyPolicy: Forbid
  failedJobsHistoryLimit: 3
  jobTemplate:
    spec:
      template:
        spec:
          containers:
          - command:
            - rake
            - memes
            env:
            - name: RAILS_ENV
              value: production
            - name: DATABASE_URL
              value: postgres://memes:redditmemes@postgres:5432/memes
            image: reddit_scraper
            imagePullPolicy: Never
            name: worker
            resources:
              limits:
                cpu: "1"
                memory: 512Mi
              requests:
                cpu: "1"
                memory: 512Mi
          restartPolicy: Never
  schedule: '*/30 * * * *'
  successfulJobsHistoryLimit: 3
---
apiVersion: autoscaling/v1
kind: HorizontalPodAutoscaler
metadata:
  name: app
  namespace: memes
spec:
  scaleTargetRef:
    apiVersion: apps/v1beta1
    kind: Deployment
    name: app
  minReplicas: !!int 1
  maxReplicas: !!int 3
  targetCPUUtilizationPercentage: 65
---
apiVersion: policy/v1beta1
kind: PodDisruptionBudget
metadata:
  name: app
  namespace: memes
spec:
  maxUnavailable: 1
  selector:
    matchLabels:
      run: app